---
import { Icon } from 'astro-icon'

export interface Props {
  icon: string
  title: string
  subtitle: string
  timeline: string
  skills: string[]
}

const {
  icon = 'mdi:rocket',
  title = 'Title',
  subtitle = 'Subtitle',
  timeline = '2021-01-01',
  skills = [],
} = Astro.props
---

<div class="feature flex flex-col gap-4">
  <div class="content">
    <div class="flex items-start justify-start gap-5">
      <Icon name={icon} />
      <div>
        <h3>{title}</h3>
        <h6>
          <span class="italic">
            {subtitle}
          </span>
          &nbsp;
          <span class="font-bold text-neutral-500">
            {timeline}
          </span>
        </h6>
      </div>
    </div>
    <p class="mt-5">
      <slot>Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, corporis.</slot>
    </p>
    <div class="mt-5">
      {
        skills.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {skills.map((skill) => (
              <span class="inline-block rounded-full bg-gray-200 px-3 py-1 text-sm font-semibold text-gray-700 dark:bg-slate-700 dark:text-gray-100">
                {skill}
              </span>
            ))}
          </div>
        )
      }
    </div>
  </div>
</div>

<style lang="scss">
  @use '../assets/scss/base/breakpoint' as *;

  .feature {
    position: relative;
    width: calc(100% - 0.5rem);
    padding: 2rem;

    > * {
      position: relative;
      z-index: 2;
    }

    @include breakpoint(large) {
      width: 100%;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
    }

    &::before {
      inset: 0;
      background-color: var(--neutral-100);
      border: 3px solid var(--neutral-700);
      border-radius: 1rem;
      box-shadow: 0 0 0 6px var(--neutral-100);
      z-index: 1;
    }

    &::after {
      background-color: var(--action-color);
      inset: 1rem -0.85rem -0.85rem 1rem;
      border-radius: 1rem;
      z-index: 0;
    }
  }

  :global(.feature [astro-icon]) {
    width: 4rem;
    color: var(--action-color);
  }

  :global(.darkmode .feature::before) {
    background-color: var(--dark-100);
    box-shadow: 0 0 0 6px var(--dark-100);
  }
</style>
