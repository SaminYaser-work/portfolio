---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import {getCollection} from 'astro:content';
import {Card, Pagination} from 'accessible-astro-components'

export const prerender = true;
export async function getStaticPaths({paginate}) {
    const blogs = await getCollection('blog', (blog) => blog.data.draft !== true);
    return paginate(blogs, {pageSize: 6});
}

const {page} = Astro.props
---

<DefaultLayout
        title="Blog"
        description="An example of a blog with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
    <section class="my-12">
        <div class="container">
            <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
            <ul class="my-3">
                {
                    page.data.map((post) => (
                            <li>
                                <Card
                                        url={'/blog/' + post.slug}
                                        title={post.data.title}
                                        footer={"this is a footer"}
                                        img={post.data.image}
                                >
                                    {
                                        post.data.description
                                    }
                                </Card>
                            </li>
                    ))
                }
            </ul>
            <div class="mt-12 grid place-content-center">
                <Pagination
                        firstPage={page.url.prev ? '/blog' : null}
                        previousPage={page.url.prev ? page.url.prev : null}
                        nextPage={page.url.next ? page.url.next : null}
                        lastPage={page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null}
                        currentPage={page.currentPage}
                        totalPages={Math.round(page.total / page.size)}
                />
            </div>
        </div>
    </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
